// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YnamarServer.Database;

#nullable disable

namespace YnamarServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250421185802_MapNpcMigration")]
    partial class MapNpcMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("YnamarServer.Database.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CharGender")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<byte>("Access")
                        .HasColumnType("smallint");

                    b.Property<byte>("Dir")
                        .HasColumnType("smallint");

                    b.Property<int>("EXP")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("Map")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Sprite")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("XOffset")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("YOffset")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("LastUpdate")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<int>("MaxMapX")
                        .HasColumnType("integer");

                    b.Property<int>("MaxMapY")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.MapLayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("LayerLevel")
                        .HasColumnType("smallint");

                    b.Property<int>("MapId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("MapLayer");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.MapNpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Hp")
                        .HasColumnType("integer");

                    b.Property<bool>("InRespawn")
                        .HasColumnType("boolean");

                    b.Property<int>("LayerId")
                        .HasColumnType("integer");

                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LayerId");

                    b.HasIndex("NpcId");

                    b.ToTable("MapNpc");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Npc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Atk")
                        .HasColumnType("integer");

                    b.Property<byte>("Behavior")
                        .HasColumnType("smallint");

                    b.Property<int>("Def")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHp")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Sprite")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Tile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Data1")
                        .HasColumnType("integer");

                    b.Property<int>("Data2")
                        .HasColumnType("integer");

                    b.Property<int>("Data3")
                        .HasColumnType("integer");

                    b.Property<int>("MapLayerId")
                        .HasColumnType("integer");

                    b.Property<byte>("Moral")
                        .HasColumnType("smallint");

                    b.Property<int>("TileX")
                        .HasColumnType("integer");

                    b.Property<int>("TileY")
                        .HasColumnType("integer");

                    b.Property<int>("TilesetNumber")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MapLayerId");

                    b.ToTable("Tile");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Character", b =>
                {
                    b.HasOne("YnamarServer.Database.Models.Account", "Account")
                        .WithOne("Character")
                        .HasForeignKey("YnamarServer.Database.Models.Character", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.MapLayer", b =>
                {
                    b.HasOne("YnamarServer.Database.Models.Map", "Map")
                        .WithMany("Layer")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.MapNpc", b =>
                {
                    b.HasOne("YnamarServer.Database.Models.MapLayer", "Layer")
                        .WithMany("MapNpc")
                        .HasForeignKey("LayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YnamarServer.Database.Models.Npc", "Npc")
                        .WithMany()
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Layer");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Tile", b =>
                {
                    b.HasOne("YnamarServer.Database.Models.MapLayer", "MapLayer")
                        .WithMany("Tile")
                        .HasForeignKey("MapLayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MapLayer");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Account", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.Map", b =>
                {
                    b.Navigation("Layer");
                });

            modelBuilder.Entity("YnamarServer.Database.Models.MapLayer", b =>
                {
                    b.Navigation("MapNpc");

                    b.Navigation("Tile");
                });
#pragma warning restore 612, 618
        }
    }
}
